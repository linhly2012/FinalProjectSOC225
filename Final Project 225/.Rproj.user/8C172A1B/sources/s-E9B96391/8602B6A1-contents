---
title: "Graphing"
author: "Linh Ly"
date: "5/27/2018"
output: html_document
---
```{r package_options, include=FALSE}
#Not including library packages loading when knit the file 
knitr::opts_knit$set(progress = TRUE, verbose = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
```

#####Plot 1 
```{r, echo = FALSE}
data <- read.csv('~/Desktop/FinalProjectSOC225/Final Project 225/clean_output/data.csv')
region <- read.csv('~/Desktop/FinalProjectSOC225/Final Project 225/census-regions-master/us census bureau regions and divisions.csv')

#include homeless and unemployment proportion to the data and 
#using sub_df instead of original data 
sub_df <- data %>% select(Year, state, avg_homeless_07to16, 
                          Sum_Total_Homeless, Sum_Unemploy_Rate, Estimate) %>% 
  mutate(homeless_proportion = Sum_Total_Homeless / Estimate, 
         unemploy_proportion = Sum_Unemploy_Rate / Estimate) %>%
  arrange(state) 

sub_region <- region %>% rename("state" = "State") #for binding data frames purposes

#for scatter plot instead of color by state, color by region. 
#using the region csv files to graph the change of unemployment and homeless
#overtime without overflowing the graph with too many information. 
join <- suppressWarnings(suppressMessages(
  sub_df %>% left_join(sub_region, by = "state") %>% rename("est_pop" = "Estimate"))) 

#ensure all column names are in lower case for easy access. 
colnames(join) <- tolower(colnames(join)) 

#re-order the dataframe
join <- join %>% select(year, division, region, state, state.code, est_pop, 
                        avg_homeless_07to16, sum_total_homeless, sum_unemploy_rate, 
                        homeless_proportion, unemploy_proportion) 

ggplot(join %>% filter(state.code %in% c("CA", "HI", "WA", 
                                    "TX", "KY", "MD", 
                                    "NY", "PA", "MA", 
                                    "WI", "MO", "IA"))) +
  geom_point(aes(sum_unemploy_rate, sum_total_homeless, colour = region)) + 
  labs(title = "Relationship of Unemployment and Homelessness") + 
  # xlab("Unemployment Proportion to Population") +
  # ylab("Homeless Proportion to Population") +
  xlab("Unemployment Rate") +
  ylab("Homelessness") +
  theme(axis.title.y = element_text(margin = margin(r = 20)), 
        axis.title.x = element_text(margin = margin(t = 10)))

# Plot 1 This is great. I think you can drop the legend (maybe highlight a few states?) 
# I think you want geom_smooth(method='lm') using the same aes() as 
# from plot 1 (you can even plot them together)
```
#####Plot 2
```{r, echo = FALSE}
ggplot(join %>% filter(state.code %in% c("CA", "HI", "WA", 
                                    "TX", "KY", "MD", 
                                    "NY", "PA", "MA", 
                                    "WI", "MO", "IA"))) +
  geom_point(aes(unemploy_proportion, homeless_proportion, colour = region)) + 
  labs(title = "Relationship of Unemployment and Homelessness") + 
  xlab("Unemployment Proportion to Population") +
  ylab("Homeless Proportion to Population") 

```
#####Plot 3
```{r, echo = FALSE}
# Plot 3: This is the time to use a line graph and show the change 
# over time rather than the averages!
#hist_df <- hist_df[!duplicated(hist_df$state), ]
ggplot(join %>% filter(state.code %in% c("CA", 
                                    "TX",
                                    "NY", 
                                    "WI"))) + 
  geom_line(aes(year, sum_unemploy_rate, colour = region)) +
  labs(title = "Unemployment Rate from 2007 to 2016 in the US") + 
  xlab("Year") +
  ylab("Unemployment Rate")
```


